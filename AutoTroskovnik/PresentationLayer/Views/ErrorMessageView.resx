<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>